# Translations template for PROJECT.
# Copyright (C) 2024 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2024-12-20 16:26+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../community/practices/release.md:1
msgid "Making releases"
msgstr ""

#: ../../community/practices/release.md:5
msgid "Our goals"
msgstr ""

#: ../../community/practices/release.md:7
msgid ""
"Our release policy describes how we decide when to make a new public "
"release of the theme so that other projects may use new features and "
"improvements. It tries to balance these goals:"
msgstr ""

#: ../../community/practices/release.md:10
msgid ""
"Release relatively frequently, so that we provide a continuous stream of "
"improvement to projects that use the theme, and minimize the effort "
"needed to upgrade."
msgstr ""

#: ../../community/practices/release.md:11
msgid ""
"Do not surprise people (especially with negative surprises) and provide "
"time for projects to provide feedback about upcoming features."
msgstr ""

#: ../../community/practices/release.md:12
msgid ""
"Minimize the toil and complexity associated with releases, and reduce "
"information silos and bottlenecks associated with them."
msgstr ""

#: ../../community/practices/release.md:16
msgid "When to make a release"
msgstr ""

#: ../../community/practices/release.md:18
msgid "Anybody is encouraged to make a new release if:"
msgstr ""

#: ../../community/practices/release.md:20
msgid "It has been more than a month since the last release."
msgstr ""

#: ../../community/practices/release.md:21
msgid "OR a significant change has been made to our code that warrants a release."
msgstr ""

#: ../../community/practices/release.md:22
msgid ""
"AND there are no open issues with a [{guilabel}`impact: block-"
"release`](https://github.com/pydata/pydata-sphinx-theme/labels/impact%3A"
"%20block-release) label."
msgstr ""

#: ../../community/practices/release.md:24
msgid "Release candidates"
msgstr ""

#: ../../community/practices/release.md:26
msgid ""
"If a release includes complex or many changes (especially in JavaScript),"
" make a `release candidate` and ask for feedback from users. This is "
"important because we do not test much of the CSS and JavaScript-based "
"functionality in our testing infrastructure. After a week or so, if there"
" are no blocking issues that have been opened since the Release "
"Candidate, we can make a full release."
msgstr ""

#: ../../community/practices/release.md:30
msgid "Process for making a release"
msgstr ""

#: ../../community/practices/release.md:32
msgid ""
"This theme uses GitHub tags and releases to automatically push new "
"releases to PyPI. Follow these steps to make a release:"
msgstr ""

#: ../../community/practices/release.md:36
msgid ""
"(optionally) **Create a [GitHub milestones](https://github.com/pydata"
"/pydata-sphinx-theme/milestones)** to organize the issues that should be "
"resolved as part of a new release."
msgstr ""

#: ../../community/practices/release.md:37
msgid ""
"**Decide if it's time** to make a release be reading [](releases:when) "
"and decide if it is time for a release."
msgstr ""

#: ../../community/practices/release.md:38
msgid ""
"**Copy the [release checklist](https://github.com/pydata/pydata-sphinx-"
"theme/blob/main/RELEASE.md) into a new issue**."
msgstr ""

#: ../../community/practices/release.md:39
msgid "**Complete the checklist**. That's it!"
msgstr ""

#: ../../community/practices/release.md:41
msgid "Choosing a version increment"
msgstr ""

#: ../../community/practices/release.md:43
msgid ""
"We use [semantic versioning](https://semver.org/) to decide whether it's "
"a major, minor, or patch bump. Before we have released `1.0`, treat minor"
" versions as breaking releases, and patch versions as feature / patch "
"releases. **If this is a release candidate**, tag it like `0.1rc1`."
msgstr ""

