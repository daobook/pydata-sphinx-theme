# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, PyData Community
# This file is distributed under the same license as the PyData Theme
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyData Theme \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-20 16:26+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../user_guide/styling.rst:3
msgid "Theme variables and CSS"
msgstr ""

#: ../../user_guide/styling.rst:8
msgid ""
"This section covers a few ways that you can control the look and feel of "
"your theme via your own CSS and theme variables."
msgstr ""

#: ../../user_guide/styling.rst:13
msgid "Custom CSS Stylesheets"
msgstr ""

#: ../../user_guide/styling.rst:15
msgid ""
"You can customize the theme's CSS by creating a custom stylesheet. This "
"stylesheet will be used by Sphinx while building your site. Any rules in "
"this style sheet will override the default theme rules."
msgstr ""

#: ../../user_guide/styling.rst:20
msgid ""
"For a more in-depth guide in linking static CSS and JS assets in your "
"site, see :doc:`static_assets`."
msgstr ""

#: ../../user_guide/styling.rst:23
msgid "To add a custom stylesheet, follow these steps:"
msgstr ""

#: ../../user_guide/styling.rst:25
msgid ""
"**Create a CSS stylesheet** in ``_static/css/custom.css``, and update the"
" CSS rules as desired."
msgstr ""

#: ../../user_guide/styling.rst:26
msgid ""
"**Attach the stylesheet to your Sphinx build**. Add the following to "
"``conf.py``:"
msgstr ""

#: ../../user_guide/styling.rst:36
msgid ""
"When you build your documentation, this stylesheet should now be "
"activated."
msgstr ""

#: ../../user_guide/styling.rst:41
msgid "CSS theme variables"
msgstr ""

#: ../../user_guide/styling.rst:43
msgid ""
"This theme defines several `CSS variables <css-variable-help_>`_ that can"
" be used to quickly control behavior and display across your "
"documentation."
msgstr ""

#: ../../user_guide/styling.rst:46
msgid ""
"These are based on top of the basic `Bootstrap CSS variables "
"<https://getbootstrap.com/docs/4.0/getting-started/theming/#css-"
"variables>`_ extended with some theme-specific variables."
msgstr ""

#: ../../user_guide/styling.rst:50
msgid "Base variables"
msgstr ""

#: ../../user_guide/styling.rst:52
msgid "Follow these steps to update the base variables:"
msgstr ""

#: ../../user_guide/styling.rst:54
msgid ""
":ref:`Add a custom CSS stylesheet <custom-css>`. This is where we'll "
"configure the variables."
msgstr ""

#: ../../user_guide/styling.rst:55
msgid ""
"Underneath a ``html`` section, add the variables you wish to update. For "
"example, to change the base font size you would add the following to your"
" ``custom.css`` file :"
msgstr ""

#: ../../user_guide/styling.rst:65
msgid ""
"Note that the theme is defined with `CSS variables <css-variable-help_>`_"
" and **not** `SASS variables <https://sass-"
"lang.com/documentation/variables>`_."
msgstr ""

#: ../../user_guide/styling.rst:68
msgid ""
"Refer to :ref:`the managing themes section in this documentation <manage-"
"themes>` if you desire a different behavior between the light and dark "
"theme."
msgstr ""

#: ../../user_guide/styling.rst:71
msgid ""
"For a complete list of the theme variables that you may override, see the"
" `theme variables defaults CSS file <pydata-css-variables_>`_:"
msgstr ""

#: ../../user_guide/styling.rst:92
msgid "Color variables"
msgstr ""

#: ../../user_guide/styling.rst:94
msgid ""
"This theme specifies color variables for the primary and secondary colors"
" (``--pst-color-primary`` and ``--pst-color-secondary``, respectively). "
"These are meant to complement one another visually across the theme, if "
"you modify these, choose colors that look good when paired with one "
"another. There are also several other color variables that control the "
"color for admonitions, links, menu items, etc."
msgstr ""

#: ../../user_guide/styling.rst:98
msgid ""
"Each color variable has two values, one corresponding to the \"light\" "
"and one for the \"dark\" theme. These are used throughout many of the "
"theme elements to define text color, background color, etc."
msgstr ""

#: ../../user_guide/styling.rst:101
msgid ""
"Here is an overview of the colors available in the theme (change theme "
"mode to switch from light to dark versions)."
msgstr ""

#: ../../user_guide/styling.rst:137
msgid ""
"**To modify the colors for these variables** for light and dark themes, "
":ref:`add a custom CSS stylesheet <custom-css>` with a structure like so:"
msgstr ""

#: ../../user_guide/styling.rst:149
msgid ""
"This theme uses shadows to convey depth in the light theme mode and "
"opacity in the dark one. It defines 4 color variables that help build "
"overlays in your documentation."
msgstr ""

#: ../../user_guide/styling.rst:152
msgid ":code:`background`: color of the back-most surface of the documentation"
msgstr ""

#: ../../user_guide/styling.rst:153
msgid ""
":code:`on-background` elements that are set on top of this background "
"(e.g. the header navbar on dark mode)."
msgstr ""

#: ../../user_guide/styling.rst:154
msgid ""
":code:`surface` elements set on the background with a light-grey color in"
" the light theme mode. This color has been kept in the dark theme (e.g. "
"code-block directives)."
msgstr ""

#: ../../user_guide/styling.rst:155
msgid ""
":code:`on-surface` elements that are on top of :code:`surface` elements "
"(e.g. sidebar directives)."
msgstr ""

#: ../../user_guide/styling.rst:157
msgid "The following image should help you understand these overlays:"
msgstr ""

#: ../../user_guide/styling.rst:193
msgid ""
"For a complete list of the theme colors that you may override, see the "
":download:`PyData theme CSS colors stylesheet "
"<../../src/pydata_sphinx_theme/assets/styles/variables/_color.scss>`."
msgstr ""

#: ../../user_guide/styling.rst:196
msgid "Configure pygments theme"
msgstr ""

#: ../../user_guide/styling.rst:198
msgid ""
"As the Sphinx theme supports multiple modes, the code highlighting colors"
" can be modified for each one of them by modifying the "
"``pygments_light_style`` and ``pygments_dark_style``. You can check "
"available Pygments colors on this `pygments demo page "
"<https://pygments.org/styles/>`__."
msgstr ""

#: ../../user_guide/styling.rst:209
msgid ""
"Note that the PyData Sphinx theme uses the `accessible pygments styles "
"<https://github.com/Quansight-Labs/accessible-pygments>`__ for its "
"default syntax highlighting themes. The accessible pygments themes are "
"designed to meet `WCAG AA or AAA standards for color contrast "
"<https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html>`__ "
"and some included themes are also suitable for colorblind users or low-"
"light conditions. You can check all the available styles at the "
"`accessible pygments demo page <https://quansight-labs.github.io"
"/accessible-pygments/>`__."
msgstr ""

#: ../../user_guide/styling.rst:216
msgid ""
"The native Sphinx option ``pygments_style`` will be overwritten by this "
"theme."
msgstr ""

