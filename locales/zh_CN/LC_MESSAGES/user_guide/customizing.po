# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, PyData Community
# This file is distributed under the same license as the PyData Sphinx Theme
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyData Sphinx Theme \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-13 01:09+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/user_guide/customizing.rst:5
msgid "Customizing the theme"
msgstr "自定义主题"

#: ../../docs/user_guide/customizing.rst:7
msgid ""
"In addition to the configuration options detailed at "
":ref:`configuration`, it is also possible to customize the HTML layout "
"and CSS style of the theme."
msgstr "除了在 :ref:`configuration` 中详细介绍的配置选项外，还可以自定义主题的 HTML 布局和 CSS 样式。"

#: ../../docs/user_guide/customizing.rst:12
msgid ""
"This theme is still under active development, and we make no promises "
"about the stability of any specific HTML structure, CSS variables, etc. "
"Make these customizations at your own risk, and pin versions if you're "
"worried about breaking changes!"
msgstr ""
"这个主题仍在积极开发中，不承诺任何特定的 HTML 结构、CSS 变量等的稳定性。"
"进行这些自定义的风险由您自己承担，如果您担心破坏变更，请锁定版本！"

#: ../../docs/user_guide/customizing.rst:20
msgid "Custom CSS Stylesheets"
msgstr "自定义主题样式"

#: ../../docs/user_guide/customizing.rst:22
msgid ""
"You may customize the theme's CSS by creating a custom stylesheet that "
"Sphinx uses to build your site. Any rules in this style-sheet will over-"
"ride the default theme rules."
msgstr "你可以通过创建定制样式表来定制主题的 CSS, Sphinx 使用它来构建你的网站。这个样式表中的任何规则都将覆盖默认的主题规则。"

#: ../../docs/user_guide/customizing.rst:25
msgid "To add a custom stylesheet, follow these steps:"
msgstr "按照以下步骤添加自定义样式表："

#: ../../docs/user_guide/customizing.rst:27
msgid ""
"**Create a CSS stylesheet** in ``_static/css/custom.css``, and add the "
"CSS rules you wish."
msgstr "在 ``_static/css/custom.css`` 中 **创建 CSS 样式表**，并添加你希望的 CSS 规则。"

#: ../../docs/user_guide/customizing.rst:28
msgid ""
"**Attach the stylesheet to your Sphinx build**. Add the following to "
"``conf.py``"
msgstr "**将样式表附加到 Sphinx 构建中**。将以下内容添加到 ``conf.py`` 中"

#: ../../docs/user_guide/customizing.rst:38
msgid ""
"When you build your documentation, this stylesheet should now be "
"activated."
msgstr "当您构建文档时，这个样式表现在应该被激活。"

#: ../../docs/user_guide/customizing.rst:43
msgid "Manage themes"
msgstr "管理主题"

#: ../../docs/user_guide/customizing.rst:47
msgid ""
"Theming is still a beta feature so the variables related to the theme "
"switch are likely to change in the future. No backward compatibily is "
"guaranteed when customization is done."
msgstr ""
"主题化仍然是测试功能，所以与主题切换相关的变量可能会在未来发生变化。"
"当定制完成后，没有向后兼容的保证。"

#: ../../docs/user_guide/customizing.rst:49
msgid "Pydata sphinx theme embed 3 different theming mode:"
msgstr "Pydata sphinx 主题嵌入 3 种不同的主题模式："

#: ../../docs/user_guide/customizing.rst:51
msgid ""
"``auto``: the documentation theme will follow the one provided by your "
"computer"
msgstr ""
"``auto``：文档主题将遵循您的计算机提供的主题"

#: ../../docs/user_guide/customizing.rst:52
msgid "``dark``: the documentation is displayed with the dark theme"
msgstr "``dark``：文档显示为暗主题"

#: ../../docs/user_guide/customizing.rst:53
msgid "``light``: the documentation is displayed with the light theme"
msgstr "``light``：文档显示为亮主题"

#: ../../docs/user_guide/customizing.rst:55
msgid ""
"In order to customize the display of any of the theme element you need to"
" encaspulate your modifications in the approriate css rules:"
msgstr ""
"为了定制任何主题元素的显示，你需要将你的修改封装在适当的 css 规则中："

#: ../../docs/user_guide/customizing.rst:73
msgid ""
"A complete list of the used colors for this theme can be found in the "
"`pydata default css colors file <pydata-css-colors_>`__."
msgstr ""
"这个主题使用的颜色的完整列表可以在 `pydata 默认 css 颜色文件 <pydata-css-colors_>`__ 中找到。"

#: ../../docs/user_guide/customizing.rst:78
msgid "CSS Theme variables"
msgstr "CSS 主题变量"

#: ../../docs/user_guide/customizing.rst:80
msgid ""
"This theme defines several `CSS variables <css-variable-help_>`_ that can"
" be used to quickly control behavior across your documentation."
msgstr "这个主题定义了几个 `CSS 变量 <css-variable-help_>`_，可以用来快速控制整个文档的行为。"

#: ../../docs/user_guide/customizing.rst:83
msgid ""
"These are based on top of the basic `Bootstrap CSS variables "
"<https://getbootstrap.com/docs/4.0/getting-started/theming/#css-"
"variables>`_ extended with some theme specific variables. An overview of "
"all variables and every default is defined in `the pydata default CSS "
"variables file <pydata-css-variables_>`_."
msgstr ""
"这些是基于基本的 `Bootstrap CSS 变量 <https://getbootstrap.com/docs/4.0/getting-"
"started/theming/#css-variables>`_ 扩展了一些主题特定的变量。所有变量和每个默认值的概述都定义在 `pydata "
"默认 CSS 变量文件 <pydata-css-variables_>`_。"

#: ../../docs/user_guide/customizing.rst:87
msgid "In order to change a variable, follow these steps:"
msgstr "要更改变量，请遵循以下步骤："

#: ../../docs/user_guide/customizing.rst:89
msgid ""
":ref:`Add a custom CSS stylesheet <custom-css>`. This is where we'll "
"configure the variables."
msgstr ":ref:`添加自定义的 CSS 样式表 <custom-css>` 这就是我们配置变量的地方。"

#: ../../docs/user_guide/customizing.rst:90
msgid ""
"Underneath a ``:root`` section, add the variables you wish to update. For"
" example, to update the base font size, you might add this to "
"``custom.css``:"
msgstr "在 ``:root`` 部分下面，添加你想要更新的变量。例如，要更新基本字体大小，你可以把它添加到 ``custom.css`` 中："

#: ../../docs/user_guide/customizing.rst:101
msgid ""
"Note that these are `CSS variables <css-variable-help_>`_ and not `SASS "
"variables <https://sass-lang.com/documentation/variables>`_. The theme is"
" defined with CSS variables, not SASS variables! Refer to the previous "
"section if you desire a different behavior between the light and dark "
"theme."
msgstr ""
"注意这些是 `CSS 变量 <css-variable-help_>`_ 而不是 `SASS 变量 <https://sass-"
"lang.com/documentation/variables>`_。主题是用 CSS 变量定义的，而不是 SASS 变量！"
"如果你想要在明和暗主题之间获得不同的行为，请参考前面的章节。"

#: ../../docs/user_guide/customizing.rst:106
msgid ""
"For a complete list of the theme variables that you may override, see the"
" `theme variables defaults CSS file <pydata-css-variables_>`_:"
msgstr "关于你可以覆盖的主题变量的完整列表，请参阅 `主题变量默认 CSS 文件 <pydata-css-variables_>`_："

#: ../../docs/user_guide/customizing.rst:114
msgid "Replacing/Removing Fonts"
msgstr "替换/删除字体"

#: ../../docs/user_guide/customizing.rst:116
msgid ""
"The theme includes the `FontAwesome 5 Free "
"<https://fontawesome.com/icons?m=free>`__ icon font (the ``.fa, .far, "
".fas`` styles, which are used for :ref:`icon links <icon-links>` and "
"admonitions). This is the only `vendored` font, and otherwise the theme "
"by default relies on available system fonts for normal body text and "
"headers."
msgstr ""
"主题包括 `FontAwesome 5 Free <https://fontawesome.com/icons?m=free>`__ "
"图标字体（``.fa, .far, .fas`` 样式，用于 :ref:`icon links <icon-links>` 和警告)。这是唯一的 "
"`vendored` 字体，否则主题默认依赖于正常的正文文本和标题可用的系统字体。"

#: ../../docs/user_guide/customizing.rst:124
msgid ""
"Previously-included fonts like `Lato` have been removed, preferring the "
"most common default system fonts of the reader's computer. This provides "
"both better performance, and better script/glyph coverage than custom "
"fonts, and is recommended in most cases."
msgstr ""
"以前包括的字体，如 `Lato` "
"已经被删除，而选择读者计算机最常见的默认系统字体。这比自定义字体提供了更好的性能和更好的脚本/符号覆盖率，在大多数情况下都是推荐的。"

#: ../../docs/user_guide/customizing.rst:129
msgid "The default body and header fonts can be changed as follows:"
msgstr "默认的正文和标题字体可以更改如下："

#: ../../docs/user_guide/customizing.rst:131
msgid ""
"Using :ref:`custom-css`, you can specify which fonts to use for body, "
"header and monospace text. For example, the following can be added to a "
"custom css file:"
msgstr "使用 :ref:`custom-css`，你可以指定正文、标题和单空格文本使用的字体。例如，以下内容可以添加到自定义 css 文件中："

#: ../../docs/user_guide/customizing.rst:143
msgid ""
"The ``-system`` variables are available to use as fallback to the default"
" fonts."
msgstr "``-system`` 变量可用于回退到默认字体。"

#: ../../docs/user_guide/customizing.rst:145
msgid ""
"If the font you want to specify in the section above is not generally "
"available by default, you will additionally need to ensure the font is "
"loaded. For example, you could download and vendor the font in the "
"``_static`` directory of your Sphinx site, and then update the base "
"template to load the font resources:"
msgstr ""
"如果你在上面一节中指定的字体在默认情况下通常是不可用的，你还需要确保字体被加载。例如，你可以在 Sphinx 网站的 ``_static`` "
"目录下下载并提供字体，然后更新基本模板来加载字体资源："

#: ../../docs/user_guide/customizing.rst:150
msgid ""
"Configure the `template_path <https://www.sphinx-"
"doc.org/en/master/theming.html#templating>`__ in your ``conf.py``"
msgstr ""
"在你的 ``conf.py`` 中配置 `template_path <https://www.sphinx-"
"doc.org/en/master/theming.html#templating>`__"

#: ../../docs/user_guide/customizing.rst:152
msgid ""
"Create a custom ``layout.html`` Jinja2 template which overloads the "
"``fonts`` block (example for loading the Lato font that is included in "
"the ``_static/vendor`` directory):"
msgstr ""
"创建自定义的 ``layout.html`` Jinja2 模板，它会重载 ``fonts`` 块（例如加载包含在 "
"``_static/vendor`` 目录中的 Lato 字体）："

#: ../../docs/user_guide/customizing.rst:166
msgid ""
"To reduce the `Flash of Unstyled Content`, you may wish to explore "
"various options for `preloading content <https://developer.mozilla.org"
"/en-US/docs/Web/HTML/Preloading_content>`__, specifically the binary font"
" files. This ensure the files will be loaded before waiting for the CSS "
"to be parsed, but should be used with care."
msgstr ""
"为了减少 `Flash of Unstyled Content`，你可能希望探索各种选项的 `预加载内容  "
"<https://developer.mozilla.org/en-"
"US/docs/Web/HTML/Preloading_content>`__，特别是二进制字体文件。这可以确保在 CSS "
"被解析之前加载文件，但应该小心使用。"

#: ../../docs/user_guide/customizing.rst:175
msgid "Advanced customization of pydata-sphinx-theme's HTML and CSS."
msgstr "pydata-sphinx-theme 的 HTML 和 CSS 的高级定制。"

