# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, PyData Community
# This file is distributed under the same license as the PyData Theme
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyData Theme \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-20 16:26+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../user_guide/accessibility.md:1
msgid "Accessibility"
msgstr ""

#: ../../user_guide/accessibility.md:3
msgid ""
"Creating and publishing content that does not exclude disabled users is a"
" complex and iterative task."
msgstr ""

#: ../../user_guide/accessibility.md:6
msgid ""
"While there is no one-size-fits-all solution to maintaining accessible "
"content, the PyData Sphinx Theme and this documentation site use some "
"techniques to avoid common content shortcomings."
msgstr ""

#: ../../user_guide/accessibility.md:11
msgid ""
"Issues and pull requests to identify or fix accessibility issues on this "
"theme or site are heartily welcomed!"
msgstr ""

#: ../../user_guide/accessibility.md:15
msgid "What We've Done"
msgstr ""

#: ../../user_guide/accessibility.md:17
msgid "Metadata"
msgstr ""

#: ../../user_guide/accessibility.md:19
msgid ""
"Several of our documentation pages contain metadata (i.e., `.. meta::` "
"directives in reStructuredText) giving summaries of the page contents. If"
" you notice a page that lacks metadata, please open a pull request to add"
" it!"
msgstr ""

#: ../../user_guide/accessibility.md:23
msgid "Colors"
msgstr ""

#: ../../user_guide/accessibility.md:25
msgid ""
"Our default code highlighting styles are `a11y-high-contrast-light` and "
"`a11y-high-contrast-dark` from https://github.com/Quansight-Labs"
"/accessible-pygments. These styles are designed to meet WCAG 2 AA or AAA "
"contrast requirements. If you don't like the look of our default code "
"highlighting styles, there are several more to choose from at "
"https://github.com/Quansight-Labs/accessible-pygments."
msgstr ""

#: ../../user_guide/accessibility.md:30
msgid ""
"We recently revisited the PyData Sphinx theme color palette to ensure "
"that the colors we use meet WCAG 2 AA or AAA contrast requirements."
msgstr ""

#: ../../user_guide/accessibility.md:32
msgid ""
"We also re-defined our `primary` and `secondary` colors to be more "
"accessible and distinct from semantic colors used to denote success, "
"warning, info, and danger contexts or information."
msgstr ""

#: ../../user_guide/accessibility.md:35
msgid ""
"We simplified the color palette and removed some colors that were "
"problematic in meeting WCAG 2 AA or AAA contrast requirements and for "
"certain types of colorblindness."
msgstr ""

#: ../../user_guide/accessibility.md:38
msgid ""
"We have improved how we assign text colors to interactive elements such "
"as buttons and dropdowns to ensure that they meet WCAG 2 AA or AAA "
"contrast requirements."
msgstr ""

#: ../../user_guide/accessibility.md:42
msgid ""
"To learn more about the PyData Sphinx Theme colors, check the "
"[](../community/design-system.md) section."
msgstr ""

#: ../../user_guide/accessibility.md:45
msgid "Keyboard Navigation Support"
msgstr ""

#: ../../user_guide/accessibility.md:47
msgid ""
"For all buttons, dropdowns, tabbed panels, hamburger menus, modals, "
"overlays, links and other interactive elements, we have worked to ensure "
"they:"
msgstr ""

#: ../../user_guide/accessibility.md:50
msgid "Have a visible focus indicator (WCAG 2.4.7)"
msgstr ""

#: ../../user_guide/accessibility.md:51
msgid "Can be accessed via keyboard navigation (WCAG 2.1.1)"
msgstr ""

#: ../../user_guide/accessibility.md:53
msgid "Testing and auditing"
msgstr ""

#: ../../user_guide/accessibility.md:55
msgid ""
"We have also added automated tests and conducted manual audits. See "
"[](../community/topics/accessibility.md)."
msgstr ""

#: ../../user_guide/accessibility.md:58
msgid "What You Can Do"
msgstr ""

#: ../../user_guide/accessibility.md:60
msgid "Site configuration"
msgstr ""

#: ../../user_guide/accessibility.md:62
msgid ""
"The following sections include recommendations for settings in the "
"`conf.py` file that can positively impact the accessibility of content "
"generated by this theme and Sphinx in general."
msgstr ""

#: ../../user_guide/accessibility.md:65
msgid "Natural Language"
msgstr ""

#: ../../user_guide/accessibility.md:67
msgid ""
"If not using a more robust [internationalization approach](https://www"
".sphinx-doc.org/en/master/usage/advanced/intl.html), specifying at least "
"the baseline natural language will help assistive technology identify if "
"the content is in a language the reader understands."
msgstr ""

#: ../../user_guide/accessibility.md:72
msgid ""
"In your `conf.py` file, [specifying the language your docs are written "
"in](https://www.sphinx-doc.org/en/master/usage/configuration.html"
"#confval-language) will propagate to the top-level `HTML` tag."
msgstr ""

#: ../../user_guide/accessibility.md:82
msgid "Add a Site Map"
msgstr ""

#: ../../user_guide/accessibility.md:84
msgid ""
"Site maps, usually served from a file called `sitemap.xml` are a broadly-"
"employed approach to telling programs like search engines and assistive "
"technologies where different content appears on a website."
msgstr ""

#: ../../user_guide/accessibility.md:88
msgid ""
"If using a service like [ReadTheDocs](https://about.readthedocs.com/), "
"these files will be created for you _automatically_, but for some other "
"approaches below, it's handy to generate a `sitemap.xml` locally or in CI"
" with a tool like [sphinx-sitemap](https://pypi.org/project/sphinx-"
"sitemap/)."
msgstr ""

#: ../../user_guide/accessibility.md:95
msgid ""
"For a simple site (no extra languages or versions), ensure `sphinx-"
"sitemap` is installed in your documentation environment, and modify your "
"`conf.py`:"
msgstr ""

#: ../../user_guide/accessibility.md:108
msgid "Logo best practices"
msgstr ""

#: ../../user_guide/accessibility.md:110
msgid ""
"We recommend that you support dark mode by providing either a single "
"version of your logo that works well in both light and dark modes, or two"
" separate versions. We also recommend that you provide alt text for your "
"logo if you do not provide visible text."
msgstr ""

#: ../../user_guide/accessibility.md:115
msgid "These recommendations are covered in detail at the page [](./branding.rst)"
msgstr ""

#: ../../user_guide/accessibility.md:117
msgid "Test and inspect your site"
msgstr ""

#: ../../user_guide/accessibility.md:119
msgid ""
"Several browser tools exist for interactively debugging the accessibility"
" of a single page at a time and can be useful during the content "
"development cycle."
msgstr ""

#: ../../user_guide/accessibility.md:123
msgid "Non-interactive tools also exist for use with CI (continuous integration)."
msgstr ""

#: ../../user_guide/accessibility.md:125
msgid "Browser tools"
msgstr ""

#: ../../user_guide/accessibility.md:127
msgid ""
"Most major browsers, including Firefox and Chrome, have built-in "
"accessibility tools as part of their web developer tools. These tools can"
" help to quickly identify accessibility issues and often include links to"
" standards:"
msgstr ""

#: ../../user_guide/accessibility.md:131
msgid ""
"[Firefox Accessibility Inspector](https://developer.mozilla.org/en-"
"US/docs/Tools/Accessibility_inspector)"
msgstr ""

#: ../../user_guide/accessibility.md:132
msgid ""
"[Chrome DevTools "
"Accessibility](https://developer.chrome.com/docs/devtools/accessibility/reference)"
msgstr ""

#: ../../user_guide/accessibility.md:134
msgid ""
"There are also a few browser extensions that some of the maintainers of "
"this theme use when working to make websites more accessible. Some of "
"these include:"
msgstr ""

#: ../../user_guide/accessibility.md:137
msgid ""
"[Accessibility Insights for "
"Web](https://accessibilityinsights.io/docs/web/overview/)"
msgstr ""

#: ../../user_guide/accessibility.md:138
msgid "[Axe DevTools](https://www.deque.com/axe/browser-extensions/)"
msgstr ""

#: ../../user_guide/accessibility.md:139
msgid "[WAVE](https://wave.webaim.org/extension/)"
msgstr ""

#: ../../user_guide/accessibility.md:141
msgid ""
"We have also found [Polypane](https://polypane.app/) to be a great tool "
"(but it is not free and requires a license)."
msgstr ""

#: ../../user_guide/accessibility.md:144
msgid "Continuous Integration tools"
msgstr ""

#: ../../user_guide/accessibility.md:146
msgid ""
"Two accessibility testing tools designed for continuous integration are "
"[Lighthouse CI](https://github.com/GoogleChrome/lighthouse-"
"ci/blob/main/docs/getting-started.md) and [Pa11y "
"CI](https://github.com/pa11y/pa11y-ci)."
msgstr ""

#: ../../user_guide/accessibility.md:150
msgid ""
"The [foo-software/lighthouse-check-action](https://github.com/foo-"
"software/lighthouse-check-action) may be helpful if the code for your "
"site is hosted on GitHub."
msgstr ""

#: ../../user_guide/accessibility.md:153
msgid ""
"If you are curious about how we do accessibility CI for this theme, refer"
" to the page [](../community/topics/accessibility.md)."
msgstr ""

#: ../../user_guide/accessibility.md:157
#, python-format
msgid ""
"Note that automated testing and extensions such as the ones mentioned "
"above will at best catch 30-40% of accessibility issues. They are not a "
"replacement for manual testing. Having a perfect score on any of these "
"tools does not mean that your site can be used by disabled users. "
"Instead, a good score signals that your site follows some best "
"accessibility practices."
msgstr ""

