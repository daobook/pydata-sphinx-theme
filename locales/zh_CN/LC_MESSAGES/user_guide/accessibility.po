# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, PyData Community
# This file is distributed under the same license as the PyData Sphinx Theme
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyData Sphinx Theme \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-12 15:12+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/user_guide/accessibility.rst:3
msgid ""
"The features and plans for addressing accessibility concerns on pydata-"
"sphinx-theme"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:9
msgid "Accessibility"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:11
msgid ""
"Creating and publishing content that does not exclude audiences with "
"limited abilities of various kinds is challenging, but also important, to"
" achieve and then maintain."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:14
msgid ""
"While there is no one-size-fits-all solution to maintaining accessible "
"content, this theme and documentation site use some techniques to avoid "
"common content shortcomings."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:19
msgid ""
"Issues and pull requests to identify or fix accessibility issues on this "
"theme or site are heartily welcomed!"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:24
msgid "In Configuration"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:26
msgid ""
"Some minor configuration options in a site's ``conf.py`` can impact the "
"accessibility of content generated by this theme, and Sphinx in general."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:31
msgid "Natural Language"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:33
msgid ""
"If not using a more robust `internationalization approach <https://www"
".sphinx-doc.org/en/master/usage/advanced/intl.html>`__ , specifying at "
"least the baseline natural language will help assistive technology "
"identify if the content is in a language the reader understands."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:39
msgid "Specifying a ``language`` will propagate to the top-level `html` tag."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:47
msgid "Site Map"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:49
msgid ""
"Site maps, usually served from a file called `sitemap.xml` are a broadly-"
"employed approach to telling programs like search engines and assistive "
"technologies where different content appears on a website."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:53
msgid ""
"If using a service like `ReadTheDocs <https://readthedocs.com>`__, these "
"files will be created for you *automatically*, but for some of the other "
"approaches below, it's handy to generate a `sitemap.xml` locally or in CI"
" with a tool like `sphinx-sitemap <https://pypi.org/project/sphinx-"
"sitemap/>`__."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:60
msgid ""
"For a simple site (no extra languages or versions), ensure `sphinx-"
"sitemap` is installed in your documentation environment, and modify your "
"``conf.py``:"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:73
msgid "In Your Source"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:78
msgid "Stay tuned for more ideas here as we learn more working on this site!"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:81
msgid "In the Browser"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:83
msgid ""
"A number of in-browser tools exist for interactively debugging the "
"accessibility of a single page at a time, and can be useful during the "
"content development cycle."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:88
msgid "Built-in tools"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:91
msgid ""
"Most major browsers, including `Firefox <https://developer.mozilla.org"
"/en-US/docs/Tools/Accessibility_inspector>`__ and `Chrome "
"<https://developers.google.com/web/tools/chrome-"
"devtools/accessibility/reference>`__ include significant accessibility "
"tooling in their development experience. Exploring these, and the modes "
"they offer, can help to quickly pinpoint issues, and often include links "
"to standards."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:99
msgid "tota11y"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:101
msgid ""
"`tota11y <https://khan.github.io/tota11y/#Installation>`__ is an open "
"source \"bookmarklet\" which modifies the currently-loaded page in-place,"
" and highlights a number of accessibility issues."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:107
msgid "WAVE"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:109
msgid ""
"`WAVE <https://wave.webaim.org/extension/>`__ is a proprietary (but "
"*gratis*) browser extension which can highlight a large number of issues."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:114
msgid "In Continuous Integration"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:116
msgid ""
"A number of automated tools are available for assessing *glaring* "
"accessibility issues across a number of pages at once, usually with many "
"configurable options."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:121
msgid "Lighthouse"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:123
msgid ""
"`Lighthouse <https://developers.google.com/web/tools/lighthouse>`__, "
"which provides automated assessment of basic accessibility issues in "
"addition to search engine automation, page performance, and other best "
"practices."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:130
msgid ""
"Specifically, `foo-software/lighthouse-check-action <https://github.com"
"/foo-software/lighthouse-check-action>`__ is run on selected pages from "
"the generated documentation site."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:135
msgid "Pa11y CI"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:137
msgid ""
"`Pa11y CI <https://github.com/pa11y/pa11y-ci>`__ is a command line tool "
"which can check a number of accessibility standards. It is most effective"
" when paired with a `sitemap.xml`, discussed above."
msgstr ""

#: ../../docs/user_guide/accessibility.rst:143
msgid ""
"This approach is more involved: for this site, we've written some custom "
"runners which:"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:146
msgid "start a static file server locally with the docs site"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:147
msgid "run `pa11y-ci` against the site's `sitemap.xml`"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:148
msgid "read known failures in a `a11y-roadmap.txt` file"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:149
msgid "generate HTML reports (including all errors)"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:150
msgid "perform some light parsing to generate some short reports"
msgstr ""

#: ../../docs/user_guide/accessibility.rst:151
msgid "archive the reports in CI"
msgstr ""

